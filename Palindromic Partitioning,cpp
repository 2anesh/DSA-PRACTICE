class Solution{
public:
    bool isPalin(string &s,int i,int j){
    
        while(i<j){
            if(s[i]!=s[j]){
                return false;
            }
            i++;j--;
        }
        return true;
    }
    int solve(string &str,int i,int j,vector<vector<int>>&dp){
        
        if(i==j || isPalin(str,i,j)){return 0;}
        if(dp[i][j]!=-1)return dp[i][j];
        int ans = INT_MAX;
        string l="";
        for(int k=i;k<=j;k++){
            l+=str[k];
            int potentialCut = 1;
            if(isPalin(l,0,l.size()-1)){
                potentialCut+=solve(str,k+1,j,dp);
                ans = min(ans,potentialCut);
            }
        }
        return dp[i][j]=ans;
    }
    int palindromicPartition(string str)
    {
        vector<vector<int>>dp(str.size()+1,vector<int>(str.size()+1,-1));
        return solve(str,0,str.size()-1,dp);
    }
};
